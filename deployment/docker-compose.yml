version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:14
    environment:
      POSTGRES_DB: paperal
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache
  redis:
    image: redis:6
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend API
  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=paperal
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - SECRET_KEY=development_secret_key
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - STORAGE_TYPE=local
      - STORAGE_PATH=./storage
      - CORS_ORIGINS=http://localhost,http://localhost:3000,http://localhost:8000
    volumes:
      - ./src/backend:/app
      - backend_storage:/app/storage
    ports:
      - "8000:8000"

  # Celery Worker
  worker:
    build:
      context: .
      dockerfile: Dockerfile.backend
    depends_on:
      - backend
      - redis
      - postgres
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=paperal
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - SECRET_KEY=development_secret_key
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - STORAGE_TYPE=local
      - STORAGE_PATH=./storage
    volumes:
      - ./src/backend:/app
      - backend_storage:/app/storage
    command: celery -A tasks.celery_app worker --loglevel=info

  # Frontend
  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    ports:
      - "3000:80"
    depends_on:
      - backend

volumes:
  postgres_data:
  redis_data:
  backend_storage:
